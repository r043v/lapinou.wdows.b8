short maparray[1536] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 26, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 16, 0, 15, 0, 15, 0, 0, 0, 0, 15, 15, 0, 0, 15, 
15, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 15, 0, 15, 0, 0, 0, 0, 15, 15, 0, 0, 0, 
15, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 15, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
15, 0, 0, 0, 0, 0, 0, 0,
0, 0, 2, 0, 15, 0, 15, 0, 0, 0, 0, 0, 0, 0, 16, 0, 
15, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
15, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 0, 0, 0, 
15, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 0, 0, 15, 
15, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 5, 0,
0, 0, 0, 3, 0, 3, 0, 4, 4, 4, 0, 5, 0, 0, 3, 0, 
0, 0, 4, 4, 0, 0, 5, 0,
0, 0, 0, 3, 0, 3, 0, 4, 0, 0, 0, 5, 0, 0, 3, 0, 
0, 4, 0, 0, 4, 0, 5, 0,
0, 0, 0, 3, 3, 3, 0, 4, 4, 0, 0, 5, 0, 0, 3, 0, 
0, 4, 0, 0, 4, 0, 5, 0,
0, 0, 0, 3, 3, 3, 0, 4, 0, 0, 0, 5, 0, 0, 3, 0, 
0, 4, 0, 0, 4, 0, 0, 0,
0, 0, 0, 3, 0, 3, 0, 4, 4, 4, 0, 5, 5, 0, 3, 3, 
0, 0, 4, 4, 0, 0, 5, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 15, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
2, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 15, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 14, 10, 5, 11, 14, 14, 14, 10, 5, 11, 14, 
0, 6, 7, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 11, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 15, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 15, 15, 15, 0, 0, 0, 0,
2, 3, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
15, 0, 15, 0, 15, 0, 0, 0,
2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 15, 0, 0, 0, 0, 0,
2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 15, 0, 0, 0, 0, 0,
2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 16, 0, 0, 0, 0, 
0, 0, 15, 0, 0, 0, 0, 0,
2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
2, 0, 0, 0, 0, 0, 0, 0, 0, 6, 7, 12, 12, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 2,
4, 4, 9, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
6, 9, 14, 0, 0, 0, 0, 2,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 2,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 2,
0, 0, 0, 0, 0, 0, 0, 0, 12, 6, 3, 7, 12, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 2,
2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 2,
2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 14, 10, 2,
2, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 2,
2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 15, 15, 0, 0, 0, 0, 2,
2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 
0, 15, 0, 15, 15, 15, 0, 2,
2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 15, 0, 15, 0, 4, 2,
2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 15, 15, 0, 0, 0, 2,
2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 
0, 0, 15, 0, 0, 0, 4, 2,
2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 
0, 0, 0, 0, 0, 0, 0, 2,
2, 5, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 
0, 0, 0, 0, 0, 0, 4, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2
};


void ultimate_auto_scrool(int *scx, int *scy, int msx, int msy, int px, int py, int szx, int szy, int limit_up, int limit_down, int limit_right, int limit_left, int blimit_up, int blimit_down, int blimit_right, int blimit_left)
{
	static int last=0, powa=1 ;

	if((px - *scx) < blimit_left)	*scx -= blimit_left - (px - *scx) ;
	else	if(((px+szx) - *scx) > 320-blimit_right)	*scx += ((px+szx) - *scx) - (320-blimit_right) ;

	if((py - *scy) < blimit_up)	*scy -= blimit_up - (py - *scy) ;
	else	if(((py+szy) - *scy) > (240-blimit_down))	*scy += ((py+szy) - *scy) - (240-blimit_down) ;

	if(tick - last > 1)
	{   //if(tick - last > 256) if(powa > 1)     --powa ;
        //else                  if(powa < 8)     ++powa ;

		last = tick ;

		if((px - *scx) < limit_left)
		{
			//if((pos_x - map->scrool_x) < limit_left>>1) powa<<=1 ;
			*scx -=powa ;
		}
		else
		{
			if(((px+szx) - *scx) > (320-limit_right))
			{
				//if(((pos_x+size_x) - map->scrool_x) > (320-(limit_right>>1))) powa++ ;
				*scx +=powa ;
			}
		}

		if((py - *scy) < limit_up)
		{
			//if((py - *scy) < limit_up>>1) powa++ ;
			*scy -=powa ;
		}
		else
		{
			if(((py+szy) - *scy) > (240-limit_down))
			{
				//if(((pos_y+size_y) - map->scrool_y) > (240-(limit_down>>1))) powa++ ;
				*scy +=powa ;
			}
		}
	}

	if(*scx < 0) *scx=0 ;
	if(*scx >= msx*32 - 320) *scx =  msx*32 - 321 ;
	if(*scy < 0) *scy=0 ;
    if(*scy > msy*32 - 240) *scy = msy*32 - 240 ;
}


